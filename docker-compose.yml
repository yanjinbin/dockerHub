version: "3.7"
services:

#kafka web UI
 kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./service/kafka-ui/config.yaml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - default

# ======= zookeeper 组件 for kafka start =======
 zookeeper:
   image: confluentinc/cp-zookeeper
   ports:
     - "2181:2181"
   environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
   networks:
     - default
# ======= zookeeper 组件 for kafka end =======

# =======  confluent kafka start =======
 kafka:
   image: confluentinc/cp-kafka:7.5.0
   links:
     - zookeeper
   ports:
     - "9092:9092"
   networks:
     - default
   volumes:
     - "./service/kafka/docker.sock:/var/run/docker.sock"
     - "./service/kafka/:/kafka"
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
     KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://127.0.0.1:9092'
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
     KAFKA_DEFAULT_REPLICATION_FACTOR: 1
     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
# =======  confluent kafka end =======

# =====  mysql v8 版本配置 start ====
 mysql-v8:
    build:
      context: ./service/mysql
      dockerfile: Dockerfile
    expose:
      - 3306
    ports:
      - 3306:3306
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_USER=test_01
      - MYSQL_PASSWORD=123456
    networks:
      - default
    volumes:
      # 数据挂载
      - ./data/mysql:/var/lib/mysql-data/:rw
      # 配置挂载
      - ./service/mysql/my.cnf:/etc/mysql/my.cnf
      # 初始化脚本
      - ./service/mysql/init:/docker-entrypoint-initdb.d/
      # 初始化sql脚本存放位置
      - ./service/mysql/sql:/opt/sql
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      --default-authentication-plugin=mysql_native_password
   # =====  mysql v8 版本配置 end ====


# ===== mongodb start =====
 mongodb-v6:
   build:
     context: service/mongodb-standalone
     dockerfile: Dockerfile
   ports:
     - "27017:27017"
   volumes:
     - ./service/mongodb-standalone/mongod.conf:/etc/mongod.conf
     - ./data/mongodb:/data/db:rw
   command: mongod -f /etc/mongod.conf
   networks:
     - default
# ===== mongodb end =====


# =====  redis v5 版本配置 start ====
 redis-v5:
    build:
      context: ./service/redis
      dockerfile: Dockerfile
    expose:
      - 6379
    ports:
      - 6379:6379
    volumes:
      - ./service/redis/redis.conf:/etc/redis.conf:ro
      - ./data/redis:/data/:rw
    restart: on-failure
    cap_add:
      - SYS_PTRACE
      - NET_ADMIN
    tty: true
    environment:
      - TZ=Asia/Shanghai
    networks:
      - default
    entrypoint: [ "redis-server", "/etc/redis.conf" ]
# =====  redis v5 版本配置 end ====

# =====  postgres v12 版本配置 start ====
 postgres:
   image: postgres:12.16
   container_name: postgresV12
   restart: always
   environment:
     POSTGRES_USER: root
     POSTGRES_PASSWORD: 123456
   ports:
     - 5432:5432
   volumes:
     - ./data/postgresql:/var/lib/postgresql/data
   networks:
     - default
# =====  postgres v12 版本配置 end ====
